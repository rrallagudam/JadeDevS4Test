<apex:page docType="html-5.0" controller="JBCXM.AdminBroker" sidebar="false" title="Rules Manager" tabStyle="Administration__tab" extensions="JBCXM.NSRemoting,JBCXM.GSCommonBroker">
<apex:outputpanel rendered="{!If($CurrentPage.parameters.traceperformance == "true" , true, false)}">
    <script type="text/javascript">
        if(window.performance && window.performance.mark && window.performance.measure){
            window.GSPerformance = {
                map:{},
                mark: function(){
                    try{
                        window.performance.mark.apply(window.performance, arguments);
                    } catch(e){
                        console.log("Failed to create mark", e);
                    }
                },
                measure: function(measureName){
                    try{
                        measureName = this.map[measureName]?measureName_this.map[measureName]:measureName;
                        this.map[measureName] = this.map[measureName]?this.map[measureName]+1:1;
                        window.performance.measure.apply(window.performance, arguments);
                    } catch(e){
                        console.log("Failed to create measure", e);
                    }
                }
            };
        }
    </script>
</apex:outputpanel>
<script type="text/javascript">
    if(!window.GSPerformance){
        window.GSPerformance = {};
        window.GSPerformance.mark = window.GSPerformance.measure = function(){};
    }
    window.GSPerformance.mark('apex_parsing_start');
</script>
<script src="/soap/ajax/31.0/connection.js" type="text/javascript"></script>
<script src="/soap/ajax/31.0/apex.js" type="text/javascript"></script>
<apex:stylesheet value="{!JSENCODE(URLFOR($Resource.JBCXM__JQuery,'css/redmond/jquery-ui-1.8.11.custom.css'))}"/>
<apex:stylesheet value="{!JSENCODE(URLFOR($Resource.JBCXM__jqGrid, 'css/ui.jqgrid.css'))}"/>
<apex:stylesheet value="{!JSENCODE(URLFOR($Resource.JBCXM__GSVendor, 'js/vendor/full-calendar/css/fullcalendar.css'))}"/>
<apex:stylesheet value="{!JSENCODE(URLFOR($Resource.JBCXM__GSVendor,'js/vendor/grids/slickgrid/slick.grid.css'))}"/>
<apex:stylesheet value="{!JSENCODE(URLFOR($Resource.JBCXM__GSVendor,'js/vendor/grids/slickgrid/controls/slick.columnpicker.css'))}"/>
<apex:stylesheet value="{!JSENCODE(URLFOR($Resource.JBCXM__GSVendor,'js/vendor/grids/slickgrid/controls/slick.pager.css'))}"/>
<apex:stylesheet value="{!JSENCODE(URLFOR($Resource.JBCXM__GSVendor,'js/vendor/fancy-tree/skin-win7/css/ui.fancytree.min.css'))}"/>
<apex:stylesheet value="{!JSENCODE(URLFOR($Resource.JBCXM__GSAppCSS, 'css/slider.css'))}"/>
    <script>
        var hash = window.location.hash; hash = hash.split("#")[1];
        var head = document.head || document.getElementsByTagName('head')[0];
        if (hash && (hash.toUpperCase() == "DS" || hash.toUpperCase().indexOf("LRM") == 0)) {
            var oldStyles = [
                                "{!JSENCODE(URLFOR($Resource.GSVendor, 'js/vendor/multiple-select/multiple-select.css'))}",
                                "{!JSENCODE(URLFOR($Resource.GSVendor, 'js/vendor/tooltip/qtip2/2.2.1/jquery.qtip.min.css'))}",
                                "{!JSENCODE(URLFOR($Resource.GSVendor, 'js/vendor/growl/jquery.growl.css'))}",
                                "{!JSENCODE(URLFOR($Resource.GSAppCSS, 'css/CS360/gsApps.css'))}",
                                "{!JSENCODE(URLFOR($Resource.GSAppCSS, 'bootstrap/bootstrap.css'))}",
                                "{!JSENCODE(URLFOR($Resource.GSAppCSS,'css/ScoreCards.css'))}",
                                "{!JSENCODE(URLFOR($Resource.GSAppCSS, 'css/rules/rules-engine-new.css'))}",
                                "{!JSENCODE(URLFOR($Resource.GSAppCSS, 'css/datascience/datascience.css'))}",
                                "{!JSENCODE(URLFOR($Resource.GSAppCSS, 'css/reports/themes/default/style.min.css'))}",
                                "{!JSENCODE(URLFOR($Resource.GSAppCSS, 'css/rules/rules-engine.css'))}",
                                "{!JSENCODE(URLFOR($Resource.GSAppCSS, 'css/rules/timeline/css/timelineview.css'))}",
                                "{!JSENCODE(URLFOR($Resource.Styles, 'css/core/gsAppContainer.css'))}"
                             ];
            var i = 0;
            for (;i < oldStyles.length; i++) {
                var link = document.createElement('link');
                link.type = 'text/css';
                link.rel = 'stylesheet';
                link.href = oldStyles[i];
                head.appendChild(link);
            }
        } else {
            var newStyles = [
            	"{!JSENCODE(URLFOR($Resource.Styles, 'css/module/rules/rules.css'))}"
            ];
            var j = 0;
            for (;j < newStyles.length; j++) {
                var link = document.createElement('link');
                link.type = 'text/css';
                link.rel = 'stylesheet';
                link.href = newStyles[j];
                head.appendChild(link);
            }
        }
    </script>
    <!-- raphael is used for slider control in scorecards -->
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/data_charting/raphael-min.js'))}"></script>
    <script>
            var nsParams = eval({!(nsParams)});
            var GS = GS || {};
            GS.nsParams = nsParams;
            GS.remoting = "{!$RemoteAction.NSRemoting.apinsinvoke}";
            GS.commonRemotingEndPoint     = '{!$RemoteAction.GSCommonBroker.gsCommonRequestBroker}';
            GS.commonRemotingBulkEndPoint     = '{!$RemoteAction.GSCommonBroker.gsCommonBulkRequestBroker}';
            GS.sessionId = "{!NSSessionId}";
            GS.NSSessionId = "{!NSSessionId}";
            GS.isScorecardEnabled = {!(isScorecardEnabled)};
            GS.isScorecardV2Enabled = {!(isScorecardV2Enabled)};
            GS.nsURL = nsParams.url;
            GS.remotingEndPoint     = '{!$RemoteAction.AdminBroker.adminRequestBroker}';
            GS.usageConfigInfo      = eval({!(UsageConfigInfo)});
            GS.packageNS            = "{!(pkgNS)}";
            GS.isPackagedInstance   = (GS.packageNS) ? "true" : "false";
            GS.customLookUpConfig   = eval({!(customLookUpConfigMap)});
            GS.nsScorecardEnabled   = eval({!(nsScorecardEnabled)});
            GS.userConfig = {
                userLocale  : {!(dateTimeFormatByLocale)},
                userName    : "{!$User.FirstName}"+" "+"{!$User.LastName}",
                userId      : "{!$User.Id}",
                emailId     : "{!$User.Email}",
                profilePhoto : "{!(profilePhoto)}",
                userDisplayName : "{!(userDisplayName)}",
                gainsightTabs: {!(gainsightTabs)},
                isLightningEnabled: {!(isLightningEnabled)}
            };
            GS.ctaSources      = {!(ctaSources)};
            GS.packageVersion  = "{!(packageVersion)}";
            window.GSPerformance.mark('apex_parsing_end');
            window.GSPerformance.measure("time_taken_by_sfdc_org", "apex_parsing_start", "apex_parsing_end");
             
            window.GSPerformance.mark('app_resource_start');
    </script>

    <apex:outputpanel rendered="{!If($CurrentPage.parameters.env == null , true, false)}">
        <c:AlertForm />
        <script type="text/javascript" src="{!JSENCODE(URLFOR($Resource.Optimized_rules, 'rules/rules.min.js'))}"></script>
    </apex:outputpanel>
    <apex:outputpanel rendered="{!If($CurrentPage.parameters.env == "debug", true, false)}">
        <script type="text/javascript" data-main="{!JSENCODE(URLFOR($Resource.Optimized_rules, IF(isPkgInstance,'rules/rules.packaged.js', 'rules/rules.js')))}" src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/require.min.js'))}"></script>
    </apex:outputpanel>
    <apex:outputpanel rendered="{!If($CurrentPage.parameters.env == "build" , true, false)}">
        <script type="text/javascript" src="{!IF($CurrentPage.parameters.apppath!=null,$CurrentPage.parameters.apppath, "https://localhost:8080/Gainsight-UI")}/Optimized_rules/rules/rules-libs.min.js"></script>
        <script>
         require.config({
                baseUrl : "",
                paths : {
                'framework': ("{!JSENCODE(URLFOR($Resource.GSApp,'js/Gainsight'))}").split('?')[0],
                'newStack' : ("{!JSENCODE(URLFOR($Resource.NS,'NS/newStack/js'))}").split('?')[0],
                'vendor' : ("{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor'))}").split('?')[0],
                'text' : ("{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/text'))}").split('?')[0]
                },
                config: {
                    text: {
                            useXhr: function(url, protocol, hostname, port) {
                                return true;
                            }
                    }
                }
                ,urlArgs: "bust=" +  (new Date()).getDate()
            });
        </script>
        <script type="text/javascript" src="{!IF($CurrentPage.parameters.apppath!=null,$CurrentPage.parameters.apppath, "https://localhost:8080/Gainsight-UI")}/Optimized_rules/rules/rules.min.js"></script>
    </apex:outputpanel>
    <apex:outputpanel rendered="{!If($CurrentPage.parameters.env == "dev" , true, false)}">
        <script type="text/javascript" data-main="{!IF($CurrentPage.parameters.apppath!=null,$CurrentPage.parameters.apppath, "https://localhost:8080/Gainsight-UI")}/Optimized_Rules/rules/rules.js" src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/require.min.js'))}"></script>
    </apex:outputpanel>

    <apex:form ></apex:form>
    <div id="gs-app-container">
        <div class="gs-module-container">
            <div id="RulesMainCntr" class="RulesMainCntr">
            <div id="preloader-cntr">
                 <div class="preloader-wrapper small active">
                    <div class="spinner-layer spinner-blue-only">
                        <div class="circle-clipper left">
                            <div class="circle"></div>
                        </div>
                        <div class="gap-patch">
                            <div class="circle"></div>
                        </div>
                        <div class="circle-clipper right">
                            <div class="circle"></div>
                        </div>
                    </div>
                 </div>
             </div>
            </div>
        </div>
    </div>

    <script>
        window.GSPerformance.mark('ga_start');
        var GSGA = {
            orgId: "{!$Organization.Id}",
            orgName: "{!$Organization.Name}",
            userName: "{!$User.FirstName}"+" "+"{!$User.LastName}"
        };
        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
        })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
    </script>
    <script src="{!JSENCODE(URLFOR($Resource.CustomJS,'CustomJS/analyticsWrapper.js'))}"></script>
    <script>
        gainsightTrackEvents.pushPageViews('Rules Manager');
        window.GSPerformance.mark('ga_end');
        window.GSPerformance.measure('Google Analytics JS', 'ga_start', 'ga_end');
    </script>
</apex:page>