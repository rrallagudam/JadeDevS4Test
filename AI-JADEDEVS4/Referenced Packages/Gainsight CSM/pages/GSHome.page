<apex:page docType="html-5.0" controller="JBCXM.LayoutBroker" sidebar="false" title="Gainsight" tabStyle="Gainsight__tab" extensions="JBCXM.NSRemoting,JBCXM.GSCommonBroker">
    <script type="text/javascript">
       if(("{!($CurrentPage.parameters.env)}" !== "" || "{!(pkgNS)}" === "") && 'serviceWorker' in navigator) {
            //Unregister Service Worker if in Dev mode.
            navigator.serviceWorker.getRegistrations().then(function(r) {

              r.forEach(function(item) {
                console.log("Unregistering Service Worker because we are in dev mode");
                item.unregister();
              });
            });
        }
        if(!window.GSPerformance) {
            window.GSPerformance = {};
            window.GSPerformance.mark = window.GSPerformance.measure = function(){};
        }
        if(window.performance && window.performance.mark && window.performance.measure) {
            window.GSPerformance = {
                mark: function(){
                    try{
                        window.performance.mark.apply(window.performance, arguments);
                    } catch(e){
                        console.log("Failed to create mark", e);
                    }
                },
                measure: function(){
                    try{
                        window.performance.measure.apply(window.performance, arguments);
                    } catch(e){
                        console.log("Failed to create measure", e);
                    }
                },
                getEntriesByType: function(){
                    try{
                        return window.performance.getEntriesByType.apply(window.performance, arguments);
                    } catch(e){
                        console.log("Failed to create entries", e);
                    }
                },
                getEntriesByName:function(){
                    try{
                        return window.performance.getEntriesByName.apply(window.performance, arguments);
                    } catch(e){
                        console.log("Failed to create entries by name", e);
                    }
                }
            };
        }
        if(window.localStorage && window.localStorage.getItem("showSFHeader") === "false") {
            document.getElementById('AppBodyHeader').style.display = 'none';
        }
    </script>

    <c:Dashboard />

    <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.JBCXM__JQuery,'css/redmond/jquery-ui-1.8.11.custom.css'))}"/>
    <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.JBCXM__GSAppCSS,'css/ScoreCards.css'))}"/>
    <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.JBCXM__GSVendor,'js/vendor/grids/slickgrid/slick.grid.css'))}"/>
    <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.JBCXM__GSVendor,'js/vendor/grids/slickgrid/controls/slick.columnpicker.css'))}"/>
    <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.JBCXM__GSVendor,'js/vendor/grids/slickgrid/controls/slick.pager.css'))}"/>
    <link href="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/chosen/chosen.min.css'))}" rel="stylesheet" type="text/css" />
    <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.JBCXM__GSVendor,'js/vendor/gridster/jquery.gridster.css'))}"/>
    <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.JBCXM__jqGrid, 'css/ui.jqgrid.css'))}"/> 
    <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.JBCXM__GSAppCSS, 'css/reports/JQgrid-slider.css'))}"/>
    <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.JBCXM__GSAppCSS, 'css/slider.css'))}"/>
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor, 'js/vendor/data_charting/raphael-min.js'))} "></script>
    <apex:includeScript value="/support/console/30.0/integration.js"/>
    <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.JBCXM__Styles, 'css/module/homepage/gs-home.css'))}"/>

    <script>
        
        var GS = GS || {};
            var nsParams                = eval({!(nsParams)}); 
            GS.remotingEndPoint         = '{!$RemoteAction.LayoutBroker.layoutRequestBroker}';
            GS.remotingBulkEndPoint     = '{!$RemoteAction.LayoutBroker.layoutBulkRequestBroker}';  
            GS.commonRemotingEndPoint   = '{!$RemoteAction.GSCommonBroker.gsCommonRequestBroker}';  
                    
            GS.packageNS            = "{!(pkgNS)}";
            GS.isPackagedInstance   = (GS.packageNS) ? "true" : "false";      
            
            GS.remoting = "{!$RemoteAction.NSRemoting.apinsinvoke}";
            GS.sessionId = "{!NSSessionId}";
            GS.isNSEnabled = nsParams.nsenabled == "true" ? true : false; 
            
            GS.userConfig = {
                userLocale  : {!(dateTimeFormatByLocale)},
                userName    : "{!$User.FirstName}"+" "+"{!$User.LastName}", 
                userId      : "{!$User.Id}",
                emailId     : "{!$User.Email}",
                profilePhoto: "{!(profilePhoto)}",
                userDisplayName: "{!(userDisplayName)}",
                gainsightTabs: {!(gainsightTabs)},
                isLightningEnabled: {!(isLightningEnabled)}
            };
            GS.colorConfig = {!(colorConfig)};  
            GS.customLabels         = {!(customLabelsMap)};
            GS.operatorsListMap     = {!(operatorsListMap)};
            GS.fiscalYrEnabled      = {!(IsCustomFiscalYearSettingsEnabled)};
            GS.customLookUpConfig   = {!(customLookUpConfigMap)};
            GS.churnLabelMap        = {!(churnLabelMap)};
            GS.currencyConfig       = {!(currencyConfigJSON)};
            GS.emailId =  GS.userConfig.emailId || "";
            
            GS.usageDataPageSize    = parseInt('{!(UsageDataRecordLimit)}');
            GS.generalPageSize = 500;
            GS.scmuPageSize = {!ScorecardLimit};
            GS.useSparkLinesforAdoption = true;
            GS.isInstanceSearchEnable = {!(isInstanceSearchEnable)};
            GS.isScorecardEnabled       = {!(isScorecardEnabled)};
            GS.maxAjaxRetries = 2; //Used for refiring the ajax remoting request
            GS.maxAjaxTimeout = 120000; //Used for timeout in case of ajax remoting request
            GS.hasAccessToCallCenter =  {!(IsCallCenterIsAssignedToLoggedInUser)};
            GS.isCustomizedCTI = {!(IsCustomizedCTI)};
            GS.isSFConsole = sforce.console.isInConsole();
            GS.isHomePage = true;
                
    </script>

    <apex:outputpanel rendered="{!If($CurrentPage.parameters.env == null , true, false)}">
        <script type="text/javascript" src="{!JSENCODE(URLFOR($Resource.Optimized_Analytics, 'home/home-libs.min.js'))}"></script>
        <script>
            require.config({
                baseUrl : "",
                paths : {
                'framework': ("{!JSENCODE(URLFOR($Resource.GSApp,'js/Gainsight'))}").split('?')[0],
                'newStack' : ("{!JSENCODE(URLFOR($Resource.NS,'NS/newStack/js'))}").split('?')[0], 
                'vendor' : ("{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor'))}").split('?')[0],
                'text' : ("{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/text'))}").split('?')[0],
                'src':"{!JSENCODE(URLFOR($Resource.src,''))}"
                },
                config: {
                    text: {
                            useXhr: function(url, protocol, hostname, port) {
                                return true;
                            }
                    }
                }
                ,urlArgs: "bust=" +  (new Date()).getDate()
            });
        </script>
        <script type="text/javascript" src="{!JSENCODE(URLFOR($Resource.Optimized_Analytics, 'home/home.min.js'))}"></script>
        <script type="text/javascript" src="{!JSENCODE(URLFOR($Resource.Optimized_Analytics, 'reportContainer/reportContainer.min.js'))}"></script>
    </apex:outputpanel>
    
    <apex:outputpanel rendered="{!If($CurrentPage.parameters.env == "debug", true, false)}">
        <script type="text/javascript" data-main="{!JSENCODE(URLFOR($Resource.Optimized_Analytics, IF(isPkgInstance,'home/home.packaged.js', 'home/home.js')))}" src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/require.min.js'))}"></script>
        <script type="text/javascript" src="{!JSENCODE(URLFOR($Resource.Optimized_Analytics, IF(isPkgInstance,'reportContainer/reportContainer.packaged.js', 'reportContainer/reportContainer.js')))}"></script>
    </apex:outputpanel>
    
    <apex:outputpanel rendered="{!If($CurrentPage.parameters.env == "build" , true, false)}">
        <script type="text/javascript" src="{!IF($CurrentPage.parameters.apppath!=null,$CurrentPage.parameters.apppath, "https://localhost:8080/Gainsight-UI")}/Optimized_Analytics/home/home-libs.min.js"></script>
        <script>
        require.config({
                baseUrl : "",
                paths : {
                'framework': ("{!JSENCODE(URLFOR($Resource.GSApp,'js/Gainsight'))}").split('?')[0],
                'newStack' : ("{!JSENCODE(URLFOR($Resource.NS,'NS/newStack/js'))}").split('?')[0], 
                'vendor' : ("{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor'))}").split('?')[0],
                'text' : ("{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/text'))}").split('?')[0],
                'src':"{!JSENCODE(URLFOR($Resource.src,''))}"
                },
                config: {
                    text: {
                            useXhr: function(url, protocol, hostname, port) {
                                return true;
                            }
                    }
                }
                ,urlArgs: "bust=" +  (new Date()).getDate()
            });
        </script>
        <script type="text/javascript" src="{!IF($CurrentPage.parameters.apppath!=null,$CurrentPage.parameters.apppath, "https://localhost:8080/Gainsight-UI")}/Optimized_Analytics/home/home.min.js"></script>
        <script type="text/javascript" src="{!IF($CurrentPage.parameters.apppath!=null,$CurrentPage.parameters.apppath, "https://localhost:8080/Gainsight-UI")}/Optimized_Analytics/reportContainer/reportContainer.min.js"></script>
    </apex:outputpanel>
    
    <apex:outputpanel rendered="{!If($CurrentPage.parameters.env == "dev" , true, false)}">
        <script type="text/javascript" data-main="{!IF($CurrentPage.parameters.apppath!=null,$CurrentPage.parameters.apppath, "https://localhost:8080/Gainsight-UI")}/Optimized_Analytics/home/home.js" src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/require.min.js'))}"></script>
        <script type="text/javascript" src="{!IF($CurrentPage.parameters.apppath!=null,$CurrentPage.parameters.apppath, "https://localhost:8080/Gainsight-UI")}/Optimized_Analytics/reportContainer/reportContainer.js"></script>
    </apex:outputpanel>
    
    <apex:outputPanel rendered="{!IsCallCenterIsAssignedToLoggedInUser}">
        <div class="sfSoftPhoneLayout" style="display:none;">
            <div class="cti-frame-header ui-state-default ui-widget-content ui-state-default ui-widget-header ui-state-default">
                <!--<div class="cti-frame-control" data-control="X"><a href="#" onclick="return false;">X</a></div>-->
                <div class="cti-frame-state" data-state="+"><div class="cti-title">Click to Call</div><a href="javasctipt:viod(0)" onclick="return false;" class="cti-plus">+</a></div>                
            </div>
            <iframe src="/apex/SurveyQuestionFrame" width="300" height="395" style="overflow:hidden"></iframe>
        </div>
      
        </apex:outputPanel>
    
<!--
<link rel="stylesheet" type="text/css" href="https://localhost:8080/UI/GSAppCSS/css/CS360/gsApps.css"/>
<link rel="stylesheet" type="text/css" href="https://localhost/SUI/GSAppCSS/css/layout/layout_stylesheet.css"/>

<link rel="stylesheet" type="text/css" href="//localhost/Gainsight-UI/GSApp/js/vendor/gridster/jquery.gridster.css"/>
<script src="//localhost/Gainsight-UI/GSApp/js/vendor/gridster/jquery.gridster.js" type="text/javascript"></script>
-->

<apex:form ></apex:form>
    <script>
        var GSGA = {
            orgId: "{!$Organization.Id}",
            orgName: "{!$Organization.Name}",
            userName: "{!$User.FirstName}"+" "+"{!$User.LastName}"
        };
        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
        })(window,document,'script','//www.google-analytics.com/analytics.js','ga');    
    </script>
    <script src="{!JSENCODE(URLFOR($Resource.CustomJS,'CustomJS/analyticsWrapper.js'))}"></script>
    <script>
        gainsightTrackEvents.pushPageViews('Gainsight Home');
        //Register only if it is packaged Environment..
        if ('serviceWorker' in navigator && GS.packageNS !== "") {
          navigator.serviceWorker
            .register('/apex/JBCXM__DashboardPerformance')
            .then(function(registration) {
                if("{!($CurrentPage.parameters.env)}" !== "") {
                   console.log("SW Unregistered - Dev Mode");
                   return registration.unregister();
                }
              console.log("Service Worker Registered");
            })
            .catch(function(err) {
              console.log("Service Worker Failed to Register", err);
            });
        }
    </script>
</apex:page>