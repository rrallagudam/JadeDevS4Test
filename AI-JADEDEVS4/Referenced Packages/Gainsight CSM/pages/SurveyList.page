<apex:page docType="html-5.0" controller="JBCXM.SurveyController" sidebar="false" title="Survey" extensions="JBCXM.NSRemoting,JBCXM.GSCommonBroker" tabStyle="Survey__tab">
    <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.JBCXM__JQuery,'css/redmond/jquery-ui-1.8.11.custom.css'))}"/>
    <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.JBCXM__jqGrid, 'css/ui.jqgrid.css'))}"/>
    <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.JBCXM__GSVendor, 'js/vendor/full-calendar/css/fullcalendar.css'))}" />
    <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.JBCXM__GSVendor,'js/vendor/rating/css/brating.css'))}" />
    <apex:includeScript value="/support/console/30.0/integration.js"/>      
    <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.JBCXM__GSAppCSS, 'bootstrap/font-awesome.min.css'))}" />	   
    <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.JBCXM__Styles,'css/module/survey/gsSurvey.css'))}" />
    
    <style> 
    #contentWrapper {position: relative; z-index: 0px;} 
    .ui-jqgrid .ui-jqgrid-bdiv tbody td {
        overflow: hidden;
        white-space : nowrap;
    }
    .frozen-div.ui-state-default {
        top : 4px !important;
    }
    </style>
    
    <script type="text/javascript">
        Visualforce.remoting.timeout = 120000; //To set the javascript remoting time out to 2mins.
    </script>
    
    <script>
            var GS = GS || {};
                
                GS.remotingEndPoint    		= '{!$RemoteAction.SurveyController.surveyRequestBroker}';
                GS.remotingBulkEndPoint    	= '{!$RemoteAction.SurveyController.surveyBulkRequestBroker}';
                GS.commonRemotingEndPoint = '{!$RemoteAction.GSCommonBroker.gsCommonRequestBroker}';
                   
                   
                GS.isPackagedInstance   = "{!(isPkgInstance)}"; 
                GS.packageNS            = "{!(packagePrefix)}";
                GS.currencyConfig 		= {!(currencyConfigJSON)};     
                
                GS.nsParams		 = 		{!(nsParams)};
                GS.sessionId =  GS.nsParams.sessionId;
                GS.remoting = "{!$RemoteAction.NSRemoting.apinsinvoke}";
                
                GS.userConfig = {
                    userLocale  : {!(dateTimeFormatByLocale)},
                    userName    : "{!$User.FirstName}"+" "+"{!$User.LastName}", 
                    userId      : "{!$User.Id}",
                    emailId     : "{!$User.Email}",
                    photo       : "{!(profilePhoto)}",
                    gainsightTabs: {!(gainsightTabs)},
					isLightningEnabled: {!(isLightningEnabled)}
                };
 
                GS.emailId =  GS.userConfig.emailId || "";
                
                GS.generalPageSize = 500;
                GS.scmuPageSize = 100;
                GS.useSparkLinesforAdoption = true;
                GS.isPermissionsEnabled = {!(isPermissionsEnabled)};
                GS.surveyModulePermission = {!(surveyModulePermission)};
                GS.isNSEnabled =GS.nsParams.nsEnabled;
                GS.isRelationshipsEnabled = {!(isRelationshipsEnabled)};
                GS.isSFConsole = sforce.console.isInConsole();
                
                //Used for opening CTA account links within service console.
                function openConsolePrimiaryTab(url, caseNumber) {
                    window.sforce && window.sforce.console.openPrimaryTab(null, url, true,
                        caseNumber, window.openCust360Success, caseNumber);
                }

    </script>
    <apex:outputpanel rendered="{!If($CurrentPage.parameters.env == null , true, false)}">
        <c:AlertForm />
        <script type="text/javascript" src="{!JSENCODE(URLFOR($Resource.CustomJS, 'Optimized/surveylist/surveylist.min.js'))}"></script>  
    </apex:outputpanel>
    <apex:outputpanel rendered="{!If($CurrentPage.parameters.env == "debug", true, false)}">
        <script type="text/javascript" data-main="{!JSENCODE(URLFOR($Resource.CustomJS, If(isPkgInstance,'Optimized/surveylist/surveylist.packaged.js', 'Optimized/surveylist/surveylist.js')))}" src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/require.min.js'))}"></script>
    </apex:outputpanel>
    <apex:outputpanel rendered="{!If($CurrentPage.parameters.env == "build" , true, false)}">
        <script type="text/javascript" src="{!If($CurrentPage.parameters.apppath!=null,$CurrentPage.parameters.apppath, "https://localhost:8080/Gainsight-UI")}/CustomJS/Optimized/surveylist/surveylist-libs.min.js"></script>
        <script>
            require.config({
                baseUrl : "",
                paths : {
                    'framework': ("{!JSENCODE(URLFOR($Resource.GSApp,'js/Gainsight'))}").split('?')[0],
                    'newStack' : ("{!JSENCODE(URLFOR($Resource.NS,'NS/newStack/js'))}").split('?')[0],
                    'vendor' : ("{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor'))}").split('?')[0],
                    'text' : ("{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/text'))}").split('?')[0]
                },
                config: {
                    text: {
                            useXhr: function(url, protocol, hostname, port) {
                                return true;
                            }
                    }
                }
                ,urlArgs: "bust=" +  (new Date()).getDate()
            });
        </script>
        <script type="text/javascript" src="{!If($CurrentPage.parameters.apppath!=null,$CurrentPage.parameters.apppath, "https://localhost:8080/Gainsight-UI")}/CustomJS/Optimized/surveylist/surveylist.min.js"></script>  
    </apex:outputpanel>
    <apex:outputpanel rendered="{!If($CurrentPage.parameters.env == "dev" , true, false)}">
        <script type="text/javascript" data-main="{!If($CurrentPage.parameters.apppath!=null,$CurrentPage.parameters.apppath, "https://localhost:8080/Gainsight-UI")}/CustomJS/Optimized/surveylist/surveylist.js" src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/require.min.js'))}"></script>
    </apex:outputpanel>
    <apex:form ></apex:form>

    <div id="gs-app-container">
    <div class="gs-module-container">
    <div class="survey-app clearfix">
         <div align="center" class="gs-loadingMsg gs-loader-container-64"><div class=" gs-loader-image-64"></div><div class="gs-loader-message-64">Loading</div></div>    	  
         <!-- right module -->
        <div class="survey-module hide">
                       
        </div>   
        <!-- end right module -->    
    </div>
    </div>
    </div>
    
    <script>
        var GSGA = {
            orgId: "{!$Organization.Id}",
            orgName: "{!$Organization.Name}",
            userName: "{!$User.FirstName}"+" "+"{!$User.LastName}"
        };
        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
        })(window,document,'script','//www.google-analytics.com/analytics.js','ga');    
    </script>
    <script
        src="{!JSENCODE(URLFOR($Resource.CustomJS,'CustomJS/analyticsWrapper.js'))}"></script>
    
</apex:page>