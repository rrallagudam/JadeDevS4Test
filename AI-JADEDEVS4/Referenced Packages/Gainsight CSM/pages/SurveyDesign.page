<apex:page docType="html-5.0" controller="JBCXM.SurveyController" sidebar="false" title="Languages" extensions="JBCXM.NSRemoting,JBCXM.GSCommonBroker" tabStyle="Administration__tab">

    <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.JBCXM__JQuery,'css/redmond/jquery-ui-1.8.11.custom.css'))}"/>
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/jquery/jquery-1.10.2.min.js'))}"></script>
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/require.min.js'))}"></script>
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/underscore-min.js'))}"></script>
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/backbone-min.js'))}"></script>
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/jquery/jquery-UI-1.10/js/jquery.ui.min.js'))}"></script>
    <script src="{!JSENCODE(URLFOR($Resource.NS,'NS/newStack/js/restclient/restClient.js'))}"> </script>
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor, 'js/vendor/jquery.htmlClean.min.js'))}" type="text/javascript"></script>
    <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.JBCXM__Styles, 'css/module/survey/surveyDesign.css'))}" />
    
    <script type="text/javascript">
        var j$ = $.noConflict();
        window.jLatest = j$;
        Visualforce.remoting.timeout = 120000; //To set the javascript remoting time out to 2mins.
    </script>

    <script>
            var GS = GS || {};

                GS.remotingEndPoint         = '{!$RemoteAction.SurveyController.surveyRequestBroker}';
                GS.remotingBulkEndPoint     = '{!$RemoteAction.SurveyController.surveyBulkRequestBroker}';
                GS.commonRemotingEndPoint 	= '{!$RemoteAction.GSCommonBroker.gsCommonRequestBroker}';


                GS.isPackagedInstance   = "{!(isPkgInstance)}";
                GS.packageNS            = "{!(packagePrefix)}";
                GS.currencyConfig       = {!(currencyConfigJSON)};

                GS.nsParams      =      {!(nsParams)};
                GS.sessionId =  GS.nsParams.sessionId;
                GS.remoting = "{!$RemoteAction.NSRemoting.apinsinvoke}";

                GS.userConfig = {
                    userLocale          : {!(dateTimeFormatByLocale)},
                    userName            : "{!$User.FirstName}"+" "+"{!$User.LastName}",
                    userId              : "{!$User.Id}",
                    emailId             : "{!$User.Email}",
                    photo               : "{!(profilePhoto)}",
                    gainsightTabs       : {!(gainsightTabs)},
                    isLightningEnabled  : {!(isLightningEnabled)}
                };

                GS.emailId =  GS.userConfig.emailId || "";

                var paths = {
                    'framework': "{!JSENCODE(URLFOR($Resource.GSApp,'js/Gainsight'))}",
                    'vendor' : "{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor'))}",
                    'text' : "{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/text'))}",
                    'async':"{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/async'))}",
                    'src':"{!JSENCODE(URLFOR($Resource.src,''))}"
                };
                if("{!$CurrentPage.parameters.env}" == "dev"){
                    paths.framework="{!If($CurrentPage.parameters.apppath!=null,$CurrentPage.parameters.apppath, "https://localhost:8080/UI")}/GSApp/js/Gainsight";
                }

                require.config({
                    baseUrl : "",
                    paths : paths,
                    config: {
                        text: {
                                useXhr: function(url, protocol, hostname, port) {
                                    return true;
                                }
                        }
                    }
                    ,urlArgs: "bust=" +  (new Date()).getDate()

                });

                var surveyLanguagesManager = null;

                define("jQuery", [], function(){
                        return window.jLatest;
                    });

                j$(document).ready(function() {

                    require([
                                "framework/views/survey/editor/SurveyLanguagesManager",
                                "jQuery",
                                "src/js/com/gainsight/app/core/components/containers/sfdc/app/AppContainer"
                            ],
                            function(surveyLanguagesManager, j$, AppContainer){
                                j$(".survey-app .gs-loadingMsg").remove();
                                j$(".survey-app .survey-module").removeClass("hide");
                                var appContainer = new AppContainer();
                                var deferred = appContainer.init(); //This will return a jQuery deferred object
                                deferred.done(function(){
                                    surveyManager =  new surveyLanguagesManager({
                                                el:j$(".survey-languages")
                                    });
                                    appContainer.registerModule(surveyManager,"Administration", "Languages", {"id":"administration-communication-languages"});
                                });
                                
                    });

                });


    </script>
    <apex:form ></apex:form>
    <div id="gs-app-container">
        <div class="gs-module-container">
            <div class="survey-languages gs-surveylang-admin clearfix">
                <div align="center" class="gs-loadingMsg gs-loader-container-64">
                    <div class=" gs-loader-image-64">
                    </div>
                    <div class="gs-loader-message-64">Loading</div>
                </div>
                <div class="survey-language hide">
                </div>
            </div>
        </div>
    </div>
    

    <script>
        var GSGA = {
            orgId: "{!$Organization.Id}",
            orgName: "{!$Organization.Name}",
            userName: "{!$User.FirstName}"+" "+"{!$User.LastName}"
        };
        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
        })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
    </script>
    <script
        src="{!JSENCODE(URLFOR($Resource.CustomJS,'CustomJS/analyticsWrapper.js'))}"></script>

</apex:page>