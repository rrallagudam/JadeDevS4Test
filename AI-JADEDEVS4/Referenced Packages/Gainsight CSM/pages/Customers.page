<!-- Removing the code
---- Copyright (c) 2011 JBara Software, Inc. 
---- Purpose                    : deprecated .
---- Other comments (optional)  : . 
-->

<apex:page docType="html-5.0" controller="JBCXM.LayoutBroker" extensions="JBCXM.NSRemoting,JBCXM.GSCommonBroker" showHeader="{!showHeader}" sidebar="false" title="Customers">
    <script src="{!JSENCODE(URLFOR($Resource.JBCXM__NS,'NS/newStack/js/restclient/restClient.js'))}"> </script>
    <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.JBCXM__JQuery,'css/redmond/jquery-ui-1.8.11.custom.css'))}" />
    <apex:includeScript value="{!JSENCODE(URLFOR($Resource.JBCXM__CustomJS, 'CustomJS/date.format.js'))}" />
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/data_charting/raphael-min.js'))}"></script>
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/jquery/jquery-1.10.2.min.js'))}"></script>
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/jquery/jquery-UI-1.10/js/jquery.ui.min.js'))}"></script>
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/grids/jqgrid-4.6.0/js/jquery.jqGrid.min.js'))}"></script>
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/grids/jqgrid-4.6.0/js/i18n/grid.locale-en.js'))}"></script>
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/grids/slickgrid/lib/jquery.event.drag-2.2.js'))}"></script>
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor, 'js/vendor/multiple-select/jquery.multiselect.filter.js'))}"></script>
    <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.JBCXM__GSVendor,'js/vendor/grids/slickgrid/slick.grid.css'))}" />
    <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.JBCXM__GSVendor,'js/vendor/grids/slickgrid/controls/slick.columnpicker.css'))}" />
    <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.JBCXM__GSVendor,'js/vendor/grids/slickgrid/controls/slick.pager.css'))}" />
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/grids/slickgrid/slick.core.js'))}"></script>
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/grids/slickgrid/plugins/slick.rowselectionmodel.js'))}"></script>
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/grids/slickgrid/plugins/slick.cellrangeselector.js'))}"></script>
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/grids/slickgrid/plugins/slick.cellrangedecorator.js'))}"></script>
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/grids/slickgrid/plugins/slick.cellselectionmodel.js'))}"></script>
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/grids/slickgrid/plugins/slick.autotooltips.js'))}"></script>
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/grids/slickgrid/plugins/slick.checkboxselectcolumn.js'))}"></script>
    <link href="{!JSENCODE(URLFOR($Resource.GSVendor, 'js/vendor/chosen/chosen.min.css'))}" rel="stylesheet" type="text/css" />
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor, 'js/vendor/chosen/chosen.jquery.min.js'))}" type="text/javascript"></script>
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/grids/slickgrid/slick.grid.js'))}"></script>
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/grids/slickgrid/slick.dataview.js'))}"></script>
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/grids/slickgrid/slick.editors.js'))}"></script>
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/grids/slickgrid/controls/slick.columnpicker.js'))}"></script>
    <script src="{!JSENCODE(URLFOR($Resource.jqGrid,'js/jqgrid.Custom.Utility.js'))}"></script>
    <script src="{!JSENCODE(URLFOR($Resource.CustomJS, 'CustomJS/jbaraCustomUtility.js'))}"></script>
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/require.min.js'))}"></script>
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/underscore-min.js'))}"></script>
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/backbone-min.js'))}"></script>
  
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor, 'js/vendor/multiple-select/jquery.multiple.select.js'))}" type="text/javascript"></script>
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor, 'js/vendor/jquery.htmlClean.min.js'))}" type="text/javascript"></script>

    <script src="{!JSENCODE(URLFOR($Resource.HighchartsJS, '3.0.7/highcharts.js'))}"></script>
    <script src="{!JSENCODE(URLFOR($Resource.HighchartsJS, '3.0.7/highcharts-more.js'))}"></script>
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/jquery.expose.js'))}"></script>
    <script src="{!JSENCODE(URLFOR($Resource.GSVendor, 'js/vendor/growl/jquery.growl.js'))}"></script>
    

   <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.JBCXM__Styles,'css/module/customers/customers.css'))}" />
    <!--     
    <link rel="stylesheet" type="text/css" href="https://localhost:8080/UI/GSAppCSS/css/analytics/analytics.css"/>
     -->
    
    <apex:includeScript value="/support/console/30.0/integration.js"/>
    

    <div id="gs-app-container">
        <div class="gs-module-container">
          <div class="chartMainContainer">
          </div>
      </div>
    </div>
    <script>
        var j$ = $.noConflict();
        window.jLatest = j$;
        
        var GS = GS || {};
            GS.userConfig = {
                userLocale  : {!(dateTimeFormatByLocale)},
                userName    : "{!$User.FirstName}"+" "+"{!$User.LastName}", 
                userId      : "{!$User.Id}",
                emailId     : "{!$User.Email}",
                profilePhoto : "{!(profilePhoto)}",
                userDisplayName : "{!(userDisplayName)}",
                gainsightTabs: {!(gainsightTabs)},
                isLightningEnabled: {!(isLightningEnabled)}
            };
            GS.remoting                 = "{!$RemoteAction.NSRemoting.apinsinvoke}";
            GS.remotingEndPoint         = '{!$RemoteAction.LayoutBroker.layoutRequestBroker}';
            GS.remotingBulkEndPoint     = '{!$RemoteAction.LayoutBroker.layoutBulkRequestBroker}';
            GS.commonRemotingEndPoint   = '{!$RemoteAction.GSCommonBroker.gsCommonRequestBroker}';
            GS.renderSummary            = true;
            GS.customLabels         = {!(customLabelsMap)};
            GS.operatorsListMap     = {!(operatorsListMap)};
            GS.fiscalYrEnabled      = {!(IsCustomFiscalYearSettingsEnabled)};
            GS.customLookUpConfig   = {!(customLookUpConfigMap)};
            GS.churnLabelMap        = {!(churnLabelMap)};
            GS.currencyConfig       = {!(currencyConfigJSON)};
            GS.packageNS            = "{!(pkgNS)}";
            GS.isPackagedInstance   = (GS.packageNS) ? "true" : "false";
            GS.statePreservation    = {}; 
            GS.generalPageSize = parseInt('{!(CustomerRecordLimit)}');
            GS.scmuPageSize = 100;
            GS.useSparkLinesforAdoption = false;
            
            GS.isSFConsole = sforce.console.isInConsole();
            GS.hasAccessToCallCenter =  {!(IsCallCenterIsAssignedToLoggedInUser)};
            GS.isCustomizedCTI = {!(IsCustomizedCTI)};
            GS.isCustomers = true;
            GS.hasCustomerInfoPermissions = {!(CustomerInfoPermissions)};
        require.config({
            baseUrl : "",
                paths : {
                'framework': "{!JSENCODE(URLFOR($Resource.GSApp,'js/Gainsight'))}", 
                //'framework': "https://localhost:8080/UI/GSApp/js/Gainsight",
                'vendor' : "{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor'))}",
                'text' : "{!JSENCODE(URLFOR($Resource.GSVendor,'js/vendor/text'))}",
                'src':"{!JSENCODE(URLFOR($Resource.src,''))}"
            },
            config: {
                text: {
                        useXhr: function(url, protocol, hostname, port) {
                            return true;
                        }
                }
            }//,
            //urlArgs: "bust=" +  (new Date()).getTime()
            
        });
        
        j$(function () {
        
            var isOnlyChart = "{!($CurrentPage.parameters.chart)}";
            if(GS.isPackagedInstance === "true") {
                //Managed Package
                j$(".chartMainContainer").css({"margin-top" : "-15px"});
            }
            else {
                //DEv code 
                j$(".chartMainContainer").css({"margin-top" : "-15px"});
                
            }
            require([
                    "src/js/com/gainsight/app/core/components/containers/sfdc/app/AppContainer",
                    "framework/views/analytics/CustomerManager",
                    "framework/views/analytics/CustomerAnalytics",
                    "text!framework/views/analytics/customer-analytics-template.html",
                    'framework/commands/AjaxCommand',
                    "framework/utils/Utils"
                ],
                function(AppContainer,CustomerManager, CustomerAnalytics, layout_template, AjaxCommand,Utils) {
                    var appContainer = new AppContainer();
                    var deferred = appContainer.init();
                    deferred.done(function(){
                      	
                      	var createAnalyticsView =  function() {
	                        j$("body").append(layout_template);
	                        //j$("body").find('.bPageHeader').hide();
	                        //j$("body").find(".bPageFooter").hide();
	                        j$("body").find('#bodyTable').css('margin', '0');
	                        
	                        this._layoutTemplate = j$("#customerAnalyticsTemplate").html().trim();
	                        this._containerTemplate = j$("#customerContainerTemplate").html().trim();
	                
	                        j$("#customerAnalyticsTemplate").remove();
	                        j$("#containerTemplate").remove();
	                
	                        j$(".chartMainContainer").append(_.template(this._layoutTemplate, {
	                            cid: "_abc"
	                        }));
	                
	                        this._layoutTemplate = j$(".chartMainContainer").find(".customerChart").clone();
	                
	                        j$(".chartMainContainer").html("").append(this._layoutTemplate);
	                
	                        window._tv = new CustomerAnalytics({
	                            el: j$(".chartMainContainer").find(".customerChart"),
	                            data: {
	                                configFilterInfo: JSON.parse(JSON.stringify(GS.customLookUpConfig)),
	                                height: 450
	                            }
	                        });
	                        window._tv.on("SAVESTATE_TRIGGERED", saveStatePreservation, window);
	                    	//j$(".gs-sideNav-container .subnav li a[data-meta='{\"menuItem\":\"ANALYTICS\"}']").trigger("click");
	                    	
	                    }
            
	                    var saveStatePreservation = function(){ 
	                        GS.statePreservation["Name"] = 'CustomersTab';
	                        GS.statePreservation[Utils.getKey("SubSection__c")] = GS.statePreservation[Utils.getKey("SubSection__c")] 
	                                                                              || JSON.stringify({"name":'CUSTOMERS',"index": 0});
	                                
	                        new AjaxCommand().excecute({
	                            "action":"statePreservation.saveState",
	                            "data" : {
	                                "stateJSON" : JSON.stringify(GS.statePreservation),
	                                "areaName" : 'CustomersTab'
	                            }
	                        },false, false).done(function(data) {                   
	                        });
	                    }
	                    
	                    var getStatePreservation = function(){
	                        var self = this;
	                        new AjaxCommand().excecute({
	                            "action":"statePreservation.getState",
	                            "data" : {"areaName" : "CustomersTab"}
	                        }).done(function(data) {
	                            
	                            GS.statePreservation = data.data;
	                            createAnalyticsView();
	                            
	                        });     
	                        
	                    }
                    
	                    if(!isOnlyChart) {
	                    	// Fetch the initial Config
	                        new AjaxCommand().excecute({
	                            action : "customers.GETCUSTOMERCONFIG"
	                        }).done(function(data) {
	                            GS.isNotificationEnabled = data.isNotificationEnabled;
	                            GS.customLabelsMap  = JSON.parse(data.customLabelsMap);
	                            GS.stageLabel = GS.customLabelsMap.Stage;
	                            ca = new CustomerManager({
	                                el:j$(".chartMainContainer"),
	                            });
	                            appContainer.registerModule(ca,"Customers","");
	                        });
	                    }
	                    else {  
	                    	getStatePreservation();
	                    }
	                    
	                    //Click to call
	                    if(GS.hasAccessToCallCenter) {
	                    	gs_cti.minimize();
	                    	setTimeout(function(){j$('.sfSoftPhoneLayout').show(); }, 3000);
	                    }
                    });    
                });
        });
            
    </script>
    
    <apex:outputPanel rendered="{!IsCallCenterIsAssignedToLoggedInUser}">
        <div class="sfSoftPhoneLayout" style="display:none;">
            <div class="cti-frame-header ui-state-default ui-widget-content ui-state-default ui-widget-header ui-state-default">
                <!--<div class="cti-frame-control" data-control="X"><a href="#" onclick="return false;">X</a></div>-->
                <div class="cti-frame-state" data-state="+"><div class="cti-title">Click to Call</div><a href="javasctipt:viod(0)" onclick="return false;" class="cti-plus">+</a></div>                
            </div>
            <iframe src="/apex/SurveyQuestionFrame" width="300" height="395" style="overflow:hidden"></iframe>
        </div>
        <script>
               var gs_cti = (function(window, j$, isConsole){                                  
                    var init = function(){
                        j$(".sfSoftPhoneLayout .cti-frame-header").click(function(evt){
                            var ele = j$(evt.currentTarget);
                            var state = ele.find('.cti-frame-state').attr("data-state");
                            if(state == "--"){                                
                                minimize();
                            }else{                                
                                maximize();                                
                            }
                        });                        
                    };
                    
                    var maximize = function(ele){
                        j$(".sfSoftPhoneLayout").height(425);
                         j$(".cti-frame-header [data-state]").attr("data-state", "+").find("a").removeClass("cti-plus");
                        j$(".cti-frame-header [data-state]").attr("data-state", "--").find("a").addClass("cti-minus");
                    };
                    
                    var minimize = function(ele){
                        j$(".sfSoftPhoneLayout").height(30);  
                        j$(".cti-frame-header [data-state]").attr("data-state", "--").find("a").removeClass("cti-minus");
                        j$(".cti-frame-header [data-state]").attr("data-state", "+").find("a").addClass("cti-plus");            
                    };
                    
                    var makeAPhoneCall = function(phoneNumber, relatedRecordId, relatedRecordName, relatedObject, whatRecordId, whatRecordName, whatObject){
                    
                    
                        var params = [];
                        var queryParams = '/CLICK_TO_DIAL?DN='+encodeURIComponent(phoneNumber)+'';
                        if(GS.isCustomizedCTI) {
	                        if(relatedRecordId) {
	                            params.push({"attributes":{"type":relatedObject},"Id":relatedRecordId,"Name":relatedRecordName});
	                        }
	                        if(whatRecordId) {                
	                            params.push({"attributes":{"type":whatObject},"Id":whatRecordId,"Name":whatRecordName});
	                        }
	                        queryParams         += '&PARAMS='+encodeURIComponent(JSON.stringify(params))+'&DISPLAY_NAME='+encodeURIComponent('null')+'';
                        }
                        else {
                        	if(whatRecordId) {
                       			queryParams += '&ID='+whatRecordId+'&ENTITY_NAME='+whatObject+'&OBJECT_NAME='+encodeURIComponent(whatRecordName)+'&DISPLAY_NAME='+encodeURIComponent(whatObject)+'';
                       		}
                       		else {
                       			queryParams += '&ID='+relatedRecordId+'&ENTITY_NAME='+relatedObject+'&OBJECT_NAME='+encodeURIComponent(relatedRecordName)+'&DISPLAY_NAME='+encodeURIComponent(relatedObject)+'';
                       		}                        	
                        }                      
                        
                            
                        if(!isConsole) {    
                            maximize();                         
                            j$(".sfSoftPhoneLayout iframe")
                                .get(0)
                                .contentWindow
                                .makeACall(queryParams);
                        }
                        else {
                            sendCTIMessage(queryParams);
                        }                   
                    };
                    
                    /**
                    *To initialize component
                    */
                    if(!isConsole) {
                        init();    
                    }
                    else {
                        j$(".sfSoftPhoneLayout").remove();
                    }
                                        
                    return {
                        maximize:function(){
                            return maximize();
                        },
                        minimize:function(){
                            return minimize();
                        },
                        makeAPhoneCall:function(phoneNumber, relatedRecordId, relatedRecordName, relatedObject, whatRecordId, whatRecordName, whatObject) {
                            return makeAPhoneCall(phoneNumber, relatedRecordId, relatedRecordName, relatedObject, whatRecordId, whatRecordName, whatObject);
                        }
                    };
                    
                })(window, j$,  GS.isSFConsole);
            </script>
        </apex:outputPanel>
    
    <script>
        var GSGA = {
            orgId: "{!$Organization.Id}",
            orgName: "{!$Organization.Name}",
            userName: "{!$User.FirstName}"+" "+"{!$User.LastName}"
        };
        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
        })(window,document,'script','//www.google-analytics.com/analytics.js','ga');    
    </script>
    <script
        src="{!JSENCODE(URLFOR($Resource.CustomJS,'CustomJS/analyticsWrapper.js'))}"></script>
    <apex:form ></apex:form>
</apex:page>